name: GitHub Workflows for Pull Requests

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  prevent-direct-push:
    runs-on: ubuntu-latest
    steps:
      - name: Block direct push to main
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "Direct pushes to 'main' are not allowed. Please use a pull request."
            exit 1
          else
            echo "No direct push to 'main'. Check will be skipped."
          fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14" # Cambia la versión según tu necesidad

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint # Solo corre el test si el lint pasó correctamente
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14" # Cambia la versión según tu necesidad

      - name: Install dependencies
        run: npm install

      - name: Check for tests
        id: check-tests
        run: |
          # Check if there are any test files
          if [ -z "$(find . -name '*.test.js' -o -name '*.spec.js')" ]; then
            echo "No test files found. Marking tests as passed."
            echo "skip=false" >> $GITHUB_ENV
            exit 0 # Exit with 0 to mark the step as successful
          else
            echo "Test files found. Running tests."
            echo "skip=false" >> $GITHUB_ENV
          fi

      - name: Run Tests
        if: env.skip != 'true'
        run: npm test

  require-approval:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Ensure PR has at least one approval
        run: |
          APPROVALS=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews \
          | jq '.[] | select(.state=="APPROVED")' | wc -l)

          # Check if the author is you (change 'your-username' to your actual GitHub username)
          AUTHOR="${{ github.event.pull_request.user.login }}"
          if [ "$AUTHOR" == "FGiannini95" ]; then
            # If you are the author, do not count your approval automatically
            echo "As the author of this PR, your approval is pending."
            APPROVALS=0 # No automatic approval
          fi

          echo "Approvals: $APPROVALS"

          if [ "$AUTHOR" != "FGiannini95" ] && [ "$APPROVALS" -lt 1 ]; then
            echo "Error: This pull request requires at least one approval from you."
            exit 1
          else
            echo "PR has sufficient approvals or is authored by you."
          fi
